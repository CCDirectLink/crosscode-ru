name: Release
on:
  push:
    tags:
      - v*

env:
  FORCE_COLOR: true

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download ultimate-crosscode-typedefs
        uses: actions/checkout@v2
        with:
          repository: dmitmel/ultimate-crosscode-typedefs
          path: ultimate-crosscode-typedefs

      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Get Yarn cache directory
        id: yarn_cache_dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn_cache_dir.outputs.dir }}
          key: |
            r1/${{ github.workflow }}/${{ runner.os }}/yarn/${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            r1/${{ github.workflow }}/${{ runner.os }}/yarn/

      - name: Set up ultimate-crosscode-typedefs
        working-directory: ultimate-crosscode-typedefs
        run: |
          yarn install --frozen-lockfile --production
          yarn link

      - name: Install dependencies
        run: |
          yarn link ultimate-crosscode-typedefs
          yarn install --frozen-lockfile

      - name: Build
        run: |
          yarn run build
          yarn run build:styles

      - name: Download the latest translations from Notabridge
        run: |
          mkdir assets/ru-translation-tool/
          curl --location --fail https://stronghold.crosscode.ru/~notabridge/crosscode.tgz | tar --extract --gzip --file - -C assets/ru-translation-tool/ --strip-components 1

      - name: Ensure that translations are up to date
        env:
          NOTABENOID_CREDENTIALS: ${{ secrets.NOTABENOID_CREDENTIALS }}
        if: env.NOTABENOID_CREDENTIALS != ''
        run: |
          nota_username="${NOTABENOID_CREDENTIALS%%:*}"
          nota_password="${NOTABENOID_CREDENTIALS#*:}"
          chapters_with_updates="$(node tool/dist/headless-main.js -u @"$nota_username" -p @"$nota_password" -o assets/ru-translation-tool --checkUpdates)"
          if [[ -n "$chapters_with_updates" ]]; then
            printf "ERROR: The following chapters are not up to date (re-run of Notabridge is needed):\n%s\n" "$chapters_with_updates"
            exit 1
          fi

      - name: Export Localize Me translation packs
        run: node tool/dist/headless-export.js assets/ru-translation-tool/

      - name: Make translations
        working-directory: dist-archive
        run: make -j$(nproc) compile-translations

      - name: Make everything else
        working-directory: dist-archive
        run: make

      - name: Get some values needed for the release
        id: release_values
        run: |
          echo "::set-output name=date::$(date '+%Y-%m-%d')"
          echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Create the release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.release_values.outputs.tag }}, LTS ${{ steps.release_values.outputs.date }}
          draft: true
          prerelease: false
          body_path: .github/release_body_template.md
          files: |
            dist-archive/crosscode-ru_modpack_v*.tgz
            dist-archive/crosscode-ru_modpack_v*.zip
            dist-archive/crosscode-ru_quick-install_v*.tgz
            dist-archive/crosscode-ru_quick-install_v*.zip
            dist-archive/crosscode-ru_v*.tgz
            dist-archive/crosscode-ru_v*.zip
            dist-archive/ultimate-localized-ui_v*.tgz
            dist-archive/ultimate-localized-ui_v*.zip
